name: Release

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
  workflow_dispatch:

# Default permissions for all jobs (can be overridden per job)
permissions:
  contents: read

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Install maturin
        run: pip install maturin

      - name: Build wheels (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          # Build for multiple Python versions
          maturin build --release --interpreter python3.10 python3.11 python3.12 python3.13
        env:
          # Enable full CPU optimizations
          RUSTFLAGS: "-C target-cpu=native"

      - name: Build wheels (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          maturin build --release --interpreter python3.10 python3.11 python3.12 python3.13

      - name: Build wheels (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # Build for Apple Silicon only (M1/M2/M3)
          rustup target add aarch64-apple-darwin
          maturin build --release --interpreter python3.10 python3.11 python3.12 python3.13 --target aarch64-apple-darwin

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: target/wheels/
          retention-days: 7

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install maturin
        run: pip install maturin

      - name: Build sdist
        run: maturin sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: target/wheels/*.tar.gz
          retention-days: 7

  publish-to-pypi:
    name: Publish to PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    # Only publish on tag pushes or releases
    if: github.event_name == 'release' || startsWith(github.ref, 'refs/tags/v')
    environment:
      name: pypi
      url: https://pypi.org/p/kohakuvault
    permissions:
      contents: write      # IMPORTANT: needed to upload to GitHub Releases
      id-token: write      # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: '*'
          merge-multiple: true

      - name: List artifacts
        run: ls -lh dist/

      - name: Upload wheels to GitHub Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/*
          fail_on_unmatched_files: false

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true
